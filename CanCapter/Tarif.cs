//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CanCapter
{
    using System;
    using System.Collections.Generic;
    using System.Data;
    using System.Data.SqlClient;
    using System.IO;

    public partial class Tarif
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Tarif()
        {
            this.Paiements = new HashSet<Paiement>();
        }
    
        public int Id_T { get; set; }
        public double Prix { get; set; }
        public int id_M { get; set; }
        public Nullable<int> id_F { get; set; }

        public static readonly string cntStr = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=" + Directory.GetCurrentDirectory() + @"\CanCapterDataBase.mdf;Integrated Security=True";
        public virtual Filier Filier { get; set; }
        public virtual Matiere Matiere { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Paiement> Paiements { get; set; }

        public static DataTable afficherAllTarif()
        {
            SqlDataAdapter adapter = new SqlDataAdapter();
            DataTable dt = new DataTable();
            try
            {
                adapter = new SqlDataAdapter("select * from Tarif", cntStr)
                {
                    MissingSchemaAction = MissingSchemaAction.AddWithKey
                };
                adapter.Fill(dt);
                SqlCommandBuilder cmd = new SqlCommandBuilder(adapter);
                return dt;
            }
            catch
            {
                return null;
            }
        }

        public static int chekcSpecificTarif(int M, int F)
        {
            SqlConnection cn = new SqlConnection();
            SqlCommand cmd = new SqlCommand();
            try
            {
                int t = -1;
                cn.ConnectionString = cntStr;
                cn.Open();
                cmd.Connection = cn;
                cmd.CommandText = "select count(*) from Tarif where id_M = @M and id_F = @F";
                cmd.Parameters.AddWithValue("@F", F);
                cmd.Parameters.AddWithValue("@M", M);
                t = (int)cmd.ExecuteScalar();
                cmd.Parameters.Clear();

                return t;
            }
            catch
            {
                return -1;
            }
            finally
            {
                cn.Close();
            }
        }

        public static int getSpecificTarif(int M, int F)
        {
            SqlConnection cn = new SqlConnection();
            SqlCommand cmd = new SqlCommand();
            try
            {
                int t=-1;
                cn.ConnectionString = cntStr;
                cn.Open();
                cmd.Connection = cn;
                cmd.CommandText = "select id_T from Tarif where id_M = @M and id_F = @F";
                cmd.Parameters.AddWithValue("@F", F);
                cmd.Parameters.AddWithValue("@M", M);
                t= (int)cmd.ExecuteScalar();
                cmd.Parameters.Clear();

                return t;
            }
            catch
            {
                return -1;
            }
            finally
            {
                cn.Close();
            }
        }
    }
}
